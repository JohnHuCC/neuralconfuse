function j =optimal(popu)

    %training data 4x60(3 input and 1 results)
t=[-0.64	-0.49	-0.96	0.85	0.31	0.87 ...
   -0.67	0.84	0.59	0.15	-0.12	-0.48 ...
    0.50	-0.54	-0.87	0.53	0.34	0.43 ...
    0.28	-0.16	-0.22	0.63	-0.37	0.63 ...
    0.58	0.70	0.01	0.27	0.90	-0.11 ...
   -0.88	0.73	0.26	-0.29	0.99	-0.55 ...
    0.30	0.21	-0.23	-0.72	-0.95	-0.16 ...
   -0.63	0.45	-0.26	0.68	0.47	0.14 ...
   -0.65	0.91	-0.47	0.85	-0.55	-0.25 ...
   -0.82	0.28	-0.64	-0.91	0.45	-0.31 ...
    0.32	-0.23	0.25	-0.96	0.82	0.60 ...
    0.49	0.63	-0.23	0.23	0.15	0.06 ...
   -0.45	-0.50	-0.10	-0.54	0.61	0.97 ...
   -0.94	0.07	-0.83	0.60	0.98	-0.87 ...
    0.88	-0.96	0.37	0.57	0.07	0.77 ...
    0.80	0.25	-0.72	-0.56	-0.64	-0.92 ...
   -0.79	0.23	0.88	-0.29	-0.18	0.97 ...
    0.89	0.35	0.98	0.53	-0.33	0.32 ...
   -0.51	-0.41	0.36	0.06	-0.18	0.21 ...
    0.50	0.17	0.10	0.17	0.02	-0.83	0.44;

    0.99	-0.29	0.94	-0.31	0.77	-0.09 ...
   -0.17	-0.56	-0.75	-0.38	0.45	0.57 ...
    0.39	-0.98	0.69	0.84	0.54	-0.91 ...
   -0.24	0.41	0.46	-0.55	-0.46	0.35 ...
   -0.05	0.25	-0.53	-0.65	0.66	0.53 ...
    0.87	-0.78	-0.64	-0.80	-0.02	-0.61 ...
    0.79	-0.80	-0.91	0.11	0.54	-0.38 ...
   -0.64	-0.32	-0.58	0.02	0.81	0.26 ...
   -0.80	-0.22	-0.89	0.00	-0.14	1.00 ...
    0.62	-0.03	0.79	-0.72	-0.22	0.85 ...
    0.83	0.43	0.24	-0.31	0.87	-0.75 ...
    0.46	0.29	0.67	-0.20	0.50	0.67 ...
   -0.36	0.10	0.96	0.10	-0.34	0.24 ...
   -0.28	0.51	-0.17	-0.02	0.39	0.95 ...
   -0.34	0.68	0.48	0.91	-0.94	-0.29 ...
    0.33	-0.44	-0.54	0.42	0.25	0.18 ...
    0.32	-0.90	-0.30	-0.10	-0.52	0.43 ...
    0.71	-0.44	0.46	-0.72	0.67	-0.72 ...
    0.18	-0.27	0.61	0.01	-0.02	0.75 ...
   -0.29	-0.10	0.93	-0.92	0.95	-0.62	0.33;
    
   -1.04	-0.24	-1.36	-0.61	-0.52	-0.57 ...
   -0.36	-0.77	-0.68	-0.13	-0.16	-0.42 ...
   -0.30	-0.94	-0.92	-0.75	-0.31	-0.77 ...
   -0.11	-0.14	-0.19	-0.53	-0.26	-0.39 ...
   -0.25	-0.42	-0.21	-0.37	-0.94	-0.22 ...
   -1.15	-0.86	-0.35	-0.55	-0.74	-0.51 ...
   -0.54	-0.52	-0.66	-0.39	-0.90	-0.12 ...
   -0.61	-0.23	-0.30	-0.35	-0.66	-0.06 ...
   -0.79	-0.66	-0.76	-0.54	-0.24	-0.79 ...
   -0.80	-0.06	-0.77	-1.02	-0.19	-0.62 ...
   -0.60	-0.18	-0.09	-0.76	-1.08	-0.69 ...
   -0.34	-0.36	-0.37	-0.07	-0.20	-0.34 ...
   -0.25	-0.20	-0.70	-0.23	-0.36	-0.75 ...
   -0.72	-0.20	-0.53	-0.27	-0.83	-1.23 ...
   -0.67	-1.04	-0.27	-0.86	-0.66	-0.51 ...
   -0.56	-0.19	-0.61	-0.37	-0.35	-0.65 ...
   -0.54	-0.65	-0.65	-0.07	-0.23	-0.84 ...
   -0.98	-0.24	-0.88	-0.61	-0.42	-0.47 ...
   -0.22	-0.18	-0.38	0.00	-0.02	-0.46 ...
   -0.25	-0.03	-0.65	-0.65	-0.67	-0.81	-0.23]
      
   
x=(t(1,:)-0.96)/(0.99-(-0.96));
y=(t(2,:)-3.5)/(1-(-0.98));
z=(t(3,:)-0.5328)/(0-(-1.36));

md=[x;y;z];
p=md';
%a(1*),b(1*) the first membership funtion parameters
%popu() come from main program
A1=popu(1);
A2=popu(2);
A3=popu(3);
C1=popu(4);
C2=popu(5);
C3=popu(6);
W1=popu(7);
W2=popu(8);
W3=popu(9);

g1 = exp(-((x-A1).^2+(y-A1).^2)./(2*C1).^2);
g2 = exp(-((x-A2).^2+(y-A2).^2)./(2*C2).^2); 
g3 = exp(-((x-A3).^2+(y-A3).^2)./(2*C3).^2); 
z= W1*g1+W2*g2+W3*g3 

z_exa= (0-(-1.36))*z'+(-1.36)

z=t(3,:);
j=sqrt(sum((z-z_exa).^2)/(121));

r=cos(3*x).*sin(2*y) %r(實際值)
t = 1:121; %設置121個點
plot(t,z, t,r)





